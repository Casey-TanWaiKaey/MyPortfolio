{"version":3,"file":"index.82cf4f68.js","sources":["../../../../../../icons/console/bolt-up-left.svg","../../../../../../icons/console/bolt-up-right.svg","../../../../../../icons/console/bolt-down-left.svg","../../../../../../icons/console/bolt-down-right.svg","../../../../../../icons/console/arrow-button.svg","../../../../components/SnakeGame.vue","../../../../pages/index.vue"],"sourcesContent":["export default \"__VITE_PUBLIC_ASSET__27d762a4__\"","export default \"__VITE_PUBLIC_ASSET__92ff675b__\"","export default \"__VITE_PUBLIC_ASSET__6c4859a3__\"","export default \"__VITE_PUBLIC_ASSET__f17a34fd__\"","export default \"__VITE_PUBLIC_ASSET__49cab059__\"","<template>\n    <div id=\"console\">\n\n      <!-- bolts -->\n      <img id=\"corner\" src=\"/icons/console/bolt-up-left.svg\" alt=\"\" class=\"absolute top-2 left-2 opacity-70\">\n      <img id=\"corner\"  src=\"/icons/console/bolt-up-right.svg\" alt=\"\" class=\"absolute top-2 right-2 opacity-70\">\n      <img id=\"corner\"  src=\"/icons/console/bolt-down-left.svg\" alt=\"\" class=\"absolute bottom-2 left-2 opacity-70\">\n      <img id=\"corner\"  src=\"/icons/console/bolt-down-right.svg\" alt=\"\" class=\"absolute bottom-2 right-2 opacity-70\">\n\n\n      <!-- Game Screen -->\n      <div id=\"game-screen\" ref=\"gameScreen\"></div>\n\n      <button id=\"start-button\" class=\"font-fira_retina\" @click=\"startGame\">start-game</button>\n\n      <!-- Game Over -->\n      <div id=\"game-over\" class=\"hidden\">\n        <span class=\"font-fira_retina text-greenfy bg-bluefy-dark h-12 flex items-center justify-center\">GAME OVER!</span>\n        <button class=\"font-fira_retina text-menu-text text-sm flex items-center justify-center w-full py-6 hover:text-white\" @click=\"startAgain\">start-again</button>\n      </div>\n\n      <div id=\"congrats\" class=\"hidden\">\n        <span class=\"font-fira_retina text-greenfy bg-bluefy-dark h-12 flex items-center justify-center\">WELL DONE!</span>\n        <button class=\"font-fira_retina text-menu-text text-sm flex items-center justify-center w-full py-6 hover:text-white\" @click=\"startAgain\">play-again</button>\n      </div>\n\n      <div id=\"console-menu\" class=\"h-full flex flex-col items-end justify-between\">\n\n        <div>\n\n        <div id=\"instructions\" class=\"font-fira_retina text-sm text-white\">\n          <p>// use your keyboard</p>\n          <p>// arrows to play</p>\n\n          <div id=\"buttons\" class=\"w-full flex flex-col items-center gap-1 pt-5\">\n\n              <button id=\"console-button\" class=\"button-up\" @click=\"move('up')\">\n                <img src=\"/icons/console/arrow-button.svg\" alt=\"\">\n              </button>\n\n              <div class=\"grid grid-cols-3 gap-1\">\n                <button id=\"console-button\" class=\"button-left\" @click=\"move('left')\">\n                  <img src=\"/icons/console/arrow-button.svg\" alt=\"\" class=\"-rotate-90\">\n                </button>\n\n                <button id=\"console-button\" class=\"button-down\" @click=\"move('down')\">\n                  <img src=\"/icons/console/arrow-button.svg\" alt=\"\" class=\"rotate-180\">\n                </button>\n\n                <button id=\"console-button\" class=\"button-right\" @click=\"move('right')\">\n                  <img src=\"/icons/console/arrow-button.svg\" alt=\"\" class=\"rotate-90\">\n                </button>\n            </div>\n\n          </div>\n        </div>\n\n        <!-- score board -->\n        <div id=\"score-board\" class=\"w-full flex flex-col pl-5\">\n          <p class=\"font-fira_retina text-white pt-5\">// food left</p>\n\n          <div id=\"score\" class=\"grid grid-cols-5 gap-5 justify-items-center pt-5 w-fit\">\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n            <div class=\"food\"></div>\n\n          </div>\n        </div>\n      </div>\n        <!-- skip -->\n        <NuxtLink id=\"skip-btn\" to=\"/about-me\" class=\"font-fira_retina flex hover:bg-white/20\">\n          skip\n        </NuxtLink>\n        \n      </div>\n    </div>\n    \n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        score: 0,\n        gameInterval: null,\n        gameStarted: false,\n        gameOver: false,\n        food: { x: 10, y: 5 },\n        snake: [\n        { x: 10, y: 12 },\n        { x: 10, y: 13 },\n        { x: 10, y: 14 },\n        { x: 10, y: 15 },\n        { x: 10, y: 16 },\n        { x: 10, y: 17 },\n        { x: 10, y: 18 },\n        { x: 11, y: 18 },\n        { x: 12, y: 18 },\n        { x: 13, y: 18 },\n        { x: 14, y: 18 },\n        { x: 15, y: 18 },\n        { x: 15, y: 19 },\n        { x: 15, y: 20 },\n        { x: 15, y: 21 },\n        { x: 15, y: 22 },\n        { x: 15, y: 23 },\n        { x: 15, y: 24 },\n      ],\n        direction: \"up\",\n      };\n    },\n    methods: {\n      startGame() {\n\n        // hide start button\n        document.getElementById(\"start-button\").style.display = \"none\";\n\n        // start game\n        this.gameStarted = true;\n        this.gameInterval = setInterval(this.moveSnake, 50);\n      },\n      startAgain() {\n        // Mostrar botón de start-game\n        document.getElementById(\"start-button\").style.display = \"block\";\n        \n        // Ocultar game over\n        document.getElementById(\"game-over\").style.display = \"none\";\n        document.getElementById(\"congrats\").style.display = \"none\";\n\n\n        // reiniciar datos del juego\n        this.gameStarted = false;\n        this.gameOver = false;\n        this.restartScore();\n        this.food = {\n          x: 10,\n          y: 5\n        };\n        this.snake = [\n            { x: 10, y: 12 },\n            { x: 10, y: 13 },\n            { x: 10, y: 14 },\n            { x: 10, y: 15 },\n            { x: 10, y: 16 },\n            { x: 10, y: 17 },\n            { x: 10, y: 18 },\n            { x: 11, y: 18 },\n            { x: 12, y: 18 },\n            { x: 13, y: 18 },\n            { x: 14, y: 18 },\n            { x: 15, y: 18 },\n            { x: 15, y: 19 },\n            { x: 15, y: 20 },\n            { x: 15, y: 21 },\n            { x: 15, y: 22 },\n            { x: 15, y: 23 },\n            { x: 15, y: 24 },\n          ],\n        this.direction = \"up\";\n\n        // limpiar intervalo de juego\n        clearInterval(this.gameInterval);\n        this.render();\n      },\n      // ... resto del código\n      moveSnake() {\n        let newX = this.snake[0].x;\n        let newY = this.snake[0].y;\n    \n        switch (this.direction) {\n          case \"up\":\n            newY--;\n            break;\n          case \"down\":\n            newY++;\n            break;\n          case \"left\":\n            newX--;\n            break;\n          case \"right\":\n            newX++;\n            break;\n        }\n        \n        // check if snake dont leave from game window\n        // and check if snake dont eat itself\n        if (\n          newX >= 0 &&\n          newX < 24 &&\n          newY >= 0 &&\n          newY < 40 &&\n          !this.snake.find(\n            snakeCell => snakeCell.x === newX && snakeCell.y === newY\n          )\n        ) {\n          /* snake move next cell */\n          this.snake.unshift({ x: newX, y: newY });\n    \n          /* check snake next cell is food */\n          if (newX === this.food.x && newY === this.food.y) {\n            \n            // add score\n            this.score++;\n\n            // add food to score board\n            const scoreFoods = document.getElementsByClassName(\"food\");\n            scoreFoods[this.score - 1].style.opacity = 1;\n\n            // check if score is 10 (max score)\n            if(this.score === 10) {\n\n              // move snake head to food (fix snake head position at end)\n              this.snake.unshift({ x: newX, y: newY }); // move head\n              this.food = { x: null, y: null } // remove food\n              clearInterval(this.gameInterval); // stop game\n              document.getElementById('congrats').style.display = 'block' // show congrats\n              this.gameOver = true; // game over\n              this.gameStarted = false; // stop game\n\n            } else {\n\n              // create new food\n              this.food = {\n                x: Math.floor(Math.random() * 24),\n                y: Math.floor(Math.random() * 40)\n              };\n            }\n\n          } else {\n            // if next cell is not food: snake pop last cell\n            this.snake.pop();\n          }\n        } else {\n          // GAME OVER: if snake leave from game window or eat itself\n          clearInterval(this.gameInterval);\n          document.getElementById('game-over').style.display = 'block'\n          this.gameStarted = false;\n          this.gameOver = true;\n        }\n        this.render();\n      },\n      render() {\n        let gameScreen = this.$refs.gameScreen;\n        gameScreen.innerHTML = \"\";\n\n        // responsive cell screen\n        // (this.$refs.gameScreen.offsetWidth / 20) + \"px\";\n\n        /* const widthCells = window.innerWidth > 1536 ? 24 : 20; */\n        const cellSize = window.innerWidth > 1536 ? \"10px\" : \"8px\";\n        // eje y\n        for (let i = 0; i < 40; i++) {\n          // exe x\n          for (let j = 0; j < 24; j++) {\n\n            /* cell style */\n            let cell = document.createElement(\"div\");\n            cell.classList.add(\"cell\");\n            cell.style.width = cellSize\n            cell.style.height = cellSize\n            cell.style.display = \"flex\";\n            cell.style.flexShrink = 0;\n            cell.classList.add(\"black\");\n            \n            /* Food cell style */\n            if (j === this.food.x && i === this.food.y) {\n              cell.style.backgroundColor = \"#43D9AD\";\n              cell.style.borderRadius = \"50%\";\n              cell.style.boxShadow = \"0 0 10px #43D9AD\";\n            }\n    \n            /* Estilo de la serpiente a medida que va crediendo */\n            let snakeCell = this.snake.find(\n                snakeCell => snakeCell.x === j && snakeCell.y === i\n            );\n\n            if (snakeCell) {\n                cell.style.backgroundColor = \"#43D9AD\";\n                cell.style.opacity = 1 - (this.snake.indexOf(snakeCell) / this.snake.length);\n              cell.classList.add(\"green\");\n\n            }\n\n            /* Estilo de la cabeza */\n            if (snakeCell && this.snake.indexOf(snakeCell) === 0) {\n\n                let headRadius = \"5px\";\n                if (this.direction === \"up\") {\n                    cell.style.borderTopLeftRadius = headRadius;\n                    cell.style.borderTopRightRadius = headRadius;\n                }\n                if (this.direction === \"down\") {\n\n                    cell.style.borderBottomLeftRadius = headRadius;\n                    cell.style.borderBottomRightRadius = headRadius;\n                }\n                if (this.direction === \"left\") {\n                    cell.style.borderTopLeftRadius = headRadius;\n                    cell.style.borderBottomLeftRadius = headRadius;\n                }\n                if (this.direction === \"right\") {\n                    cell.style.borderTopRightRadius = headRadius;\n                    cell.style.borderBottomRightRadius = headRadius;\n                }\n            }\n            gameScreen.appendChild(cell);\n        }\n      }\n      \n    },\n    restartScore(){\n      this.score = 0;\n      const scoreFoods = document.getElementsByClassName(\"food\");\n      for (let i = 0; i < scoreFoods.length; i++) {\n        scoreFoods[i].style.opacity = 0.3;\n      }\n    },\n    move(direction){\n      switch (direction) {\n        case \"up\":\n        if (this.direction !== \"down\") {\n              this.direction = \"up\";\n            }\n          break;\n        case \"down\":\n        if (this.direction !== \"up\") {\n              this.direction = \"down\";\n            }\n          break;\n        case \"left\":\n        if (this.direction !== \"right\") {\n              this.direction = \"left\";\n            }\n          break;\n        case \"right\":\n        if (this.direction !== \"left\") {\n              this.direction = \"right\";\n            }\n          break;\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener(\"keydown\", event => {\n      if (this.gameStarted) {\n        switch (event.keyCode) {\n          case 37:\n            if (this.direction !== \"right\") {\n              this.direction = \"left\";\n            }\n            break;\n          case 38:\n            if (this.direction !== \"down\") {\n              this.direction = \"up\";\n            }\n            break;\n          case 39:\n            if (this.direction !== \"left\") {\n              this.direction = \"right\";\n            }\n            break;\n          case 40:\n            if (this.direction !== \"up\") {\n              this.direction = \"down\";\n            }\n            break;\n        }\n      } else {\n        switch (event.keyCode) {\n          case 32:\n            if(this.gameOver){\n              this.startAgain();\n            }else {\n              this.startGame();\n            }\n            break;\n        }\n      }\n    });\n\n    /* window.innerWidth < 1536 ? cellSize = 8 : cellSize = 10; */\n    /* this.food = {\n      x: Math.floor(Math.random() * 24),\n      y: Math.floor(Math.random() * 40)\n    }; */\n    window.onresize = () => {\n      this.render();\n    };\n\n    this.render();\n\n\n  }\n};\n</script>\n\n<style>\n#console {\n    width: 530px;\n    height: 475px;\n    border: 1px solid black;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background: linear-gradient(to bottom, rgba(35, 123, 109, 1), rgba(67, 217, 173, 0.13));\n    border-radius: 10px;\n    padding: 30px;\n    position: relative;\n\n}\n\n#game-screen {\n    width: 240px;\n    height: 400px;\n    border-radius: 10px;\n    background-color: rgba(1, 22, 39, 0.84);\n    display: flex;\n    flex-wrap: wrap;\n    box-shadow: inset 0 0 10px #00000071;\n}\n\n#start-button {\n  padding-inline: 16px;\n  padding-block: 8px;\n  border-radius: 10px;\n  border: 1px solid black;\n  background-color: #FEA55F;\n  color: black;\n  cursor: pointer;\n  position: absolute;\n  bottom: 20%;\n  left: 17%;\n  font-size: 0.875rem; /* 14px */\n  line-height: 1.25rem; /* 20px */\n}\n\n#start-button:hover {\n  background-color: rgb(255, 178, 119);\n}\n\n#console-menu{\n  height: 400px;\n}\n\n#console-button {\n  background-color: #010C15;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 30px;\n}\n\n#console-button:hover {\n  background-color: #010c15d8;\n  box-shadow: #43D9AD 0 0 10px;\n}\n\n#instructions {\n  background-color: rgba(1, 20, 35, 0.19);\n  border-radius: 7px;\n  padding: 10px;\n}\n\n.food {\n  background-color: #43D9AD;\n  border-radius: 50%;\n  box-shadow: 0 0 10px #43D9AD;\n  width: 8px;\n  height: 8px;\n  opacity: 0.3;\n}\n\n#game-over, #congrats {\n  position: absolute;\n  bottom: 12%;\n  color: #43D9AD;\n  width: 240px;\n}\n\n#game-over, #congrats > span {\n  font-size: 1.5rem; /* 24px */\n  line-height: 2rem; /* 32px */\n}\n\n#corner {\n  width: 24px;\n  height: 24px;\n}\n\n#skip-btn{\n  font-size: 14px;\n  color: white;\n  padding-inline: 16px;\n  padding-block: 8px;\n  border: 2px solid white;\n  border-radius: 0.5rem; /* 8px */\n}\n\n\n@media (min-width: 1024px) and (max-width: 1536px) {\n  #game-screen {\n    width: 192px;\n    height: 320px;\n  }\n\n  #console {\n    width: 420px;\n    height: 370px;\n    padding: 24px;\n\n  }\n\n  #start-button {\n  padding-inline: 12px;\n  padding-block: 6px;\n  border-radius: 8px;\n  bottom: 20%;\n  left: 17%;\n  font-size: 0.75rem; /* 14px */\n  line-height: 1rem; /* 20px */\n}\n\n  #console-menu{\n  height: 320px;\n}\n\n#instructions {\n  font-size: 12px;\n}\n\n#console-button {\n  width: 40px;\n  height: 25px;\n  border-radius: 6px;\n}\n\n#score-board {\n  font-size: 12px;\n}\n\n.food {\n  width: 6px;\n  height: 6px;\n}\n\n#game-over, #congrats {\n  position: absolute;\n  bottom: 10%;\n  color: #43D9AD;\n  width: 192px;\n}\n\n#game-over, #congrats > span {\n  font-size: 1.125rem; /* 18px */\n  line-height: 1.75rem; /* 28px */\n}\n\n#corner {\n  width: 20px;\n  height: 20px;\n}\n\n#skip-btn{\n  font-size: 12px;\n  padding-inline: 12px;\n  padding-block: 6px;\n  border: 2px solid white;\n  border-radius: 0.5rem; /* 8px */\n}\n}\n</style>","<template>\n  \t<main v-if=\"!loading\" id=\"hello\">\n\n    \t<!-- gradients -->\n    \t<div class=\"css-blurry-gradient-blue\"></div>\n    \t<div class=\"css-blurry-gradient-green\"></div>\n\n\t\t<section class=\"hero\">\n\t\t\n\t\t\t<div class=\"head\">\n\t\t\t\t<span>\n\t\t\t\t\tHi all, I am\n\t\t\t\t</span>\n\t\t\t\t<h1>{{ config.dev.name }}</h1>\n        <span class=\"diple flex\">\n          >&nbsp;\n\t\t\t\t<h2 class=\"line-1 anim-typewriter max-w-fit\"> {{ config.dev.role }} </h2>\n        </span>\n\t\t\t</div>\n\n\t\t\t<div id=\"info\">\n\t\t\t\t<span class=\"action\">\n\t\t\t\t\t// complete the game to continue\n\t\t\t\t</span>\n\t\t\t\t<span :class=\"{hide: isMobile}\">\n\t\t\t\t\t// you can also see it on my Github page\n\t\t\t\t</span>\n\t\t\t\t<span :class=\"{hide: !isMobile}\">\n\t\t\t\t\t// find my profile on Github:\n\t\t\t\t</span>\n\t\t\t\t<p class=\"code\">\n\t\t\t\t\t<span class=\"identifier\">\n\t\t\t\t\t\tconst\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"variable-name\">\n\t\t\t\t\t\tgithubLink\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"operator\">\n\t\t\t\t\t\t=\n\t\t\t\t\t</span>\n\t\t\t\t\t<a class=\"string\" :href=\"'https://github.com/' + config.public.dev.contacts.social.github.user\">\n\t\t\t\t\t\t\"https://github.com/{{ config.public.dev.contacts.social.github.user }}\"\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<section data-aos=\"fade-up\" class=\"game\" v-if=\"!isMobile\">\n\t\t\t<SnakeGame />\n\t\t</section>\n\n\t</main>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\n\nconst config = useRuntimeConfig()\n\nconst isMobile = ref(false)\nconst loading = ref(false)\n\nonMounted(() => {\n  if (window.innerWidth <= 1024) isMobile.value = true\n  window.addEventListener('resize', handleResize)\n})\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', handleResize)\n})\n\nfunction handleResize() {\n  if (window.innerWidth <= 1024) {\n    isMobile.value = true\n  } else {\n    isMobile.value = false\n  }\n}\n</script>\n\n<style scoped>\n#hello {\n  display: flex;\n  height: 100%;\n  width: 100%;\n  flex: 1 1 auto;\n  padding-left: 275px;\n  overflow: hidden;\n}\n.hero {\n\twidth: 100%;\n\tjustify-content: center;\n\t\n}\n.game {\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\theight: 100%;\n\tjustify-content: center;\n/* \talign-items: center; */\n\tz-index: 20;\n}\n\n#hello .hero {\n\tdisplay: flex;\n\tflex-direction: column;\n\t/* display: grid;\n\tgrid-template-columns: repeat(12, minmax(0, 1fr)); */\n\tmargin: 0rem;\n}\n\n\n#hello .head span {\n  font-size: 18px;\n  line-height: 1;\n  color: #E5E9F0;\n  font-family: 'Fira Code Retina';\n}\n\n#hello .head h1 {\n  font-size: 58px;\n  line-height: 1;\n  color: #E5E9F0;\n  font-family: 'Fira Code Regular';\n  padding-top: 1rem; /* 16px */\n  padding-bottom: 1rem; /* 16px */\n}\n\n#hello .head h2, #hello .head .diple {\n  font-size: 32px;\n  line-height: 1;\n  color: #4D5BCE;\n  font-family: 'Fira Code Retina';\n}\n\n.head {\n  padding-bottom: 3rem;\n}\n\n#info {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n#info > span {\n  font-size: 14px;\n  line-height: 1;\n  color: #607B96;\n  font-family: 'Fira Code Retina';\n  padding-bottom: 1rem; /* 16px */\n}\n\n.code {\n  font-family: 'Fira Code Medium';\n  color: #E5E9F0;\n}\n\n.code .identifier {\n  color: #4D5BCE;\n}\n\n.code .variable-name {\n  color: #43D9AD;\n}\n\n.code .operator {\n  color: white;\n}\n\n.code .string {\n  color: #E99287;\n  text-decoration-line: underline;\n  text-underline-offset: 4px;\n}\n\n#info {\n\tpadding-block: 2.5rem;\n}\n\n#info .action {\n\tdisplay: flex\n}\n\n.hide {\n  display: none;\n}\n\n.css-blurry-gradient-blue {\n  position: fixed;\n  bottom: 25%;\n  right: 5%;\n  width: 300px;\n  height: 300px;\n\tborder-radius: 0% 0% 50% 50%;\n  rotate: 10deg;\n\tfilter: blur(70px);\n  background: radial-gradient(circle at 50% 50%,rgba(77, 91, 206, 1), rgba(76, 0, 255, 0));\n  opacity: 0.5;\n  z-index: 10;\n}\n\n.css-blurry-gradient-green {\n  position: absolute;\n  top: 20%;\n  right: 30%;\n  width: 300px;\n  height: 300px;\n\tborder-radius: 0% 50% 0% 50%;\n\tfilter: blur(70px);\n  background: radial-gradient(circle at 50% 50%,rgba(67, 217, 173, 1), rgba(76, 0, 255, 0));\n  opacity: 0.5;\n  z-index: 10;\n}\n\n#info {\n  font-size: 14px;\n}\n\n/* Typewrite Animation */\n\n.line-1 {\n    width: fit-content;\n    border-right: 3px solid rgba(255,255,255,.75);\n    white-space: nowrap;\n    overflow: hidden;\n    padding-right: 2px;\n}\n\n.anim-typewriter{\n    animation: typewriter 3.5s steps(40) 1s 1 normal both,\n    blinkTextCursor 800ms steps(40) infinite normal;\n}\n\n@keyframes typewriter{\n  from{width: 0;}\n  to{width: 100%;}\n}\n\n@keyframes blinkTextCursor{\n  from{border-right-color: rgba(255,255,255,.75);}\n  to{border-right-color: transparent;}\n}\n\n\n/* mobile */\n@media (max-width: 768px) {\n\n\t#hello {\n\t\tpadding-left: 0;\n\t}\n\n\t#hello .hero {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tmargin: 1.75rem; /* 28px */\n\t}\n\t.head {\n\t\tpadding-top: 4rem; /* 40px */\n\t}\n\n\t#hello .head h2, #hello .head .diple {\n\t\tfont-size: 20px;\n\t\tcolor: #43D9AD;\n\t}\n\t\n\t#info .action {\n\t\tdisplay: none;\n\t}\n\n}\n\n/* tablet */\n@media (min-width: 768px) and (max-width: 1024px) {\n\t#hello {\n\t\tpadding-left: 0;\n\t}\n\t#hello .hero {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tmargin: 1.75rem; /* 28px */\n\t}\n\t.head {\n\t\tpadding-top: 4rem; /* 40px */\n\t}\n\n}\n\n@media (min-width: 1024px) and (max-width: 1320px) {\n\t#hello {\n\t\tpadding-left: 135px;\n\t}\n}\n\n\n/* LG */\n\n@media (min-width: 1024px) {\n\n  .css-blurry-gradient-blue {\n    position: fixed;\n    bottom: 10%;\n    right: 10%;\n    width: 500px;\n    height: 500px;\n    opacity: 0.7;\n    border-radius: 100% 50% 100% 0%;\n  }\n\n  .css-blurry-gradient-green {\n    position: fixed;\n    top: 10%;\n    right: 35%;\n    filter: blur(100px);\n    rotate: 10deg;\n    width: 400px;\n    height: 400px;\n    opacity: 0.5;\n    border-radius: 100% 0% 0% 0%;\n    rotate: 20deg;\n  }\n}\n\n@media (min-width: 1920px){\n\t#hello {\n\t\tpadding-left: 310px;\n\t}\n\t#hello .head h1 {\n\t\tfont-size: 62px;\n\t}\n}\n\n</style>\n"],"names":["snakeCell","_ssrRenderAttrs","_mergeProps","_ssrRenderAttr"],"mappings":"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"}